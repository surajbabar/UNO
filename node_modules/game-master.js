var gameMaster = {};
var playerProxy = require('player-proxy.js').proxy;
var playerModel = require('player.js').player;
var net = require('net');

var totalPlayers;
var totalPacks
var players = [];
var proxies = [];
var game;

exports.startGameMaster = function (noOfPacks, noOfPlayers) {
    totalPlayers = noOfPlayers;
    totalPacks = noOfPacks;
    var server = net.createServer();
    server.listen(8080);
    server.on('connection', function (socket) {
        if (proxies.length == totalPlayers) {
            return;
        }
        var proxy = playerProxy.createProxy(socket, gameMaster);
        proxies.push(proxy);
//        console.log('got ' + proxies.length + ' connections out of ' + totalPlayers);
    });
}

function sendSnapshotToEachPlayer() {
    proxies.forEach(function (proxy) {
        playerProxy.send(proxy, game);
    });
}
var startGame = function () {
    game = require('game.js').createGame(totalPacks, players);
    game.initialize();
    sendSnapshotToEachPlayer();
}

gameMaster.onPlayerRegistered = function (player) {
    players.push(player);
    if (players.length == totalPlayers) {
        startGame();
    }
};

var sendResultToEachPlayer = function () {
    var result = {};
    result.type = "gameResult";
    game.populateResult(result);
    proxies.forEach(function (proxy) {
        playerProxy.sendResult(proxy, result);
    })
}

gameMaster.onCardPlayed = function (card, newColor, player) {
    game.playCard(player, card, newColor);
    if (playerModel.hasWon(player)) {
        sendResultToEachPlayer();
        return;
    }
    sendSnapshotToEachPlayer();
};

gameMaster.onPlayerDrewACard = function (player) {
    game.drawCard(player);
    proxies.forEach(function (proxy) {
        playerProxy.sendSnapshotToPlayer(proxy, game, player);
    })
};

gameMaster.onNoActionAfterDraw = function (player) {
    game.moveForwardAsPlayerTookNoActionOnDrawnCard(player);
    sendSnapshotToEachPlayer();
};

gameMaster.onDrawTwoAction = function (player) {
    game.drawTwoCards(player);
    sendSnapshotToEachPlayer();
};


